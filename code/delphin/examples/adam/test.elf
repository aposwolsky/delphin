nat : type. %name nat N.
z : nat.
s : nat -> nat.

exp : type. %name exp E.
lam : (exp -> exp) -> exp.
app : exp -> exp -> exp.

eq : exp -> exp -> type. %name eq D.
eq_app : eq E1 F1 -> eq E2 F2 -> eq (app E1 E2) (app F1 F2).
eq_lam : ({x}eq x x -> eq (E x) (F x)) -> eq (lam E) (lam F).

o : type.
ar : o -> o -> type. %infix right 10 ar.